# Generated by Django 5.2.6 on 2025-09-26 09:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('tags', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('member_level', models.CharField(choices=[('normal', '普通用户'), ('vip', 'VIP用户'), ('svip', 'SVIP用户')], default='normal', max_length=10)),
                ('user_bio', models.TextField(blank=True, null=True, verbose_name='个人简介')),
                ('user_nickname', models.CharField(blank=True, max_length=50, null=True, verbose_name='昵称')),
                ('followers_count', models.PositiveIntegerField(default=0, verbose_name='粉丝数量')),
                ('following_count', models.PositiveIntegerField(default=0, verbose_name='关注别人数量')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='获赞数量')),
                ('is_vip', models.BooleanField(default=True, verbose_name='用户是否为vip')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_users', to='auth.group')),
                ('tags', models.ManyToManyField(blank=True, related_name='users', to='tags.tag', verbose_name='兴趣标签')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_users', to='auth.permission')),
            ],
            options={
                'db_table': 'custom_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
